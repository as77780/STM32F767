/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenplayer_screen/ScreenPlayerViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenPlayerViewBase::ScreenPlayerViewBase() :
    buttonCallback(this, &ScreenPlayerViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenPlayerViewBase::flexButtonCallbackHandler)
{
    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_TEXTURES_CARBON_FIBRE_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    boxWithBorder1_1_1.setPosition(11, 188, 296, 68);
    boxWithBorder1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(41, 37, 37));
    boxWithBorder1_1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(3, 80, 94));
    boxWithBorder1_1_1.setBorderSize(5);

    boxWithBorder1_1.setPosition(11, 112, 223, 68);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(41, 37, 37));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(3, 80, 94));
    boxWithBorder1_1.setBorderSize(5);

    buttonBack.setXY(404, 193);
    buttonBack.setBitmaps(touchgfx::Bitmap(BITMAP_IC_ID), touchgfx::Bitmap(BITMAP_IC_ID));
    buttonBack.setAction(buttonCallback);

    buttonPlayToBack.setXY(17, 193);
    buttonPlayToBack.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID));
    buttonPlayToBack.setIconXY(14, 15);
    buttonPlayToBack.setAction(buttonCallback);

    buttonPlayToFollow.setXY(167, 193);
    buttonPlayToFollow.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID));
    buttonPlayToFollow.setIconXY(14, 15);
    buttonPlayToFollow.setAction(buttonCallback);

    buttonPlay.setXY(93, 193);
    buttonPlay.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PLAY_32_ID));
    buttonPlay.setIconXY(19, 14);
    buttonPlay.setAction(buttonCallback);

    buttonStop.setXY(240, 193);
    buttonStop.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_STOP_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_STOP_32_ID));
    buttonStop.setIconXY(14, 14);
    buttonStop.setAction(buttonCallback);

    box1.setPosition(393, 0, 87, 32);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(43, 39, 39));

    textArea1.setXY(400, 0);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(69, 250, 121));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID42));

    flexButtonHDD.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    flexButtonHDD.setBitmapXY(0, 0);
    flexButtonHDD.setIconBitmaps(Bitmap(BITMAP_HDD_ID), Bitmap(BITMAP_HDD_ID));
    flexButtonHDD.setIconXY(4, 4);
    flexButtonHDD.setPosition(17, 117, 60, 60);
    flexButtonHDD.setAction(flexButtonCallback);

    flexButtonRadio.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    flexButtonRadio.setBitmapXY(0, 0);
    flexButtonRadio.setIconBitmaps(Bitmap(BITMAP_RADIO_ID), Bitmap(BITMAP_RADIO_ID));
    flexButtonRadio.setIconXY(4, 4);
    flexButtonRadio.setPosition(93, 117, 60, 60);
    flexButtonRadio.setAction(flexButtonCallback);

    flexButtonBud.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    flexButtonBud.setBitmapXY(0, 0);
    flexButtonBud.setIconBitmaps(Bitmap(BITMAP_BUD_ID), Bitmap(BITMAP_BUD_ID));
    flexButtonBud.setIconXY(4, 4);
    flexButtonBud.setPosition(167, 117, 60, 60);
    flexButtonBud.setAction(flexButtonCallback);

    boxWithBorder1_1_2.setPosition(234, 112, 73, 68);
    boxWithBorder1_1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(41, 37, 37));
    boxWithBorder1_1_2.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(3, 80, 94));
    boxWithBorder1_1_2.setBorderSize(5);

    imagePlay.setXY(246, 121);
    imagePlay.setBitmap(touchgfx::Bitmap(BITMAP_BUD_ID));
    imagePlay.setAlpha(0);

    add(tiledImage1);
    add(boxWithBorder1_1_1);
    add(boxWithBorder1_1);
    add(buttonBack);
    add(buttonPlayToBack);
    add(buttonPlayToFollow);
    add(buttonPlay);
    add(buttonStop);
    add(box1);
    add(textArea1);
    add(flexButtonHDD);
    add(flexButtonRadio);
    add(flexButtonBud);
    add(boxWithBorder1_1_2);
    add(imagePlay);
}

void ScreenPlayerViewBase::setupScreen()
{

}

void ScreenPlayerViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonBack)
    {
        //InteractionBack
        //When buttonBack clicked change screen to Main
        //Go to Main with screen transition towards South
        application().gotoMainScreenSlideTransitionSouth();
    }
    else if (&src == &buttonPlayToBack)
    {
        //InteractionPlayToBack
        //When buttonPlayToBack clicked call virtual function
        //Call PlayToBack
        PlayToBack();
    }
    else if (&src == &buttonPlayToFollow)
    {
        //InteractionPlayToFollow
        //When buttonPlayToFollow clicked call virtual function
        //Call PlayToFollow
        PlayToFollow();
    }
    else if (&src == &buttonPlay)
    {
        //InteractionPlayToPlay
        //When buttonPlay clicked call virtual function
        //Call PlayToPlay
        PlayToPlay();
    }
    else if (&src == &buttonStop)
    {
        //InteractionPlayToStop
        //When buttonStop clicked call virtual function
        //Call PlayToStop
        PlayToStop();
    }
}

void ScreenPlayerViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonHDD)
    {
        //InteractionPlayHDD
        //When flexButtonHDD clicked call virtual function
        //Call PlayHDD
        PlayHDD();
    }
    else if (&src == &flexButtonRadio)
    {
        //InteractionPlayRadio
        //When flexButtonRadio clicked call virtual function
        //Call PlayRadio
        PlayRadio();
    }
    else if (&src == &flexButtonBud)
    {
        //InteractionPlayBUD
        //When flexButtonBud clicked call virtual function
        //Call PlayBUD
        PlayBUD();
    }
}
